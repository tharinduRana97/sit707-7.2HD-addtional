steps:
  # Step 1: Install dependencies
  - id: "Install Dependencies"
    name: "python"
    entrypoint: "pip"
    args: ["install", "-r", "requirements.txt"]

  # Step 2: Run unit tests with pytest
  - id: "Run Unit Tests"
    name: "python"
    entrypoint: "pytest"
    args: ["tests/unit"]

  # Step 3: Start integration test environment (if needed)
  - id: "Start Integration Environment"
    name: "docker/compose:1.29.2"
    args: ["up", "-d", "--build"]

  # Step 4: Run integration tests
  - id: "Run Integration Tests"
    name: "docker/compose:1.29.2"
    args:
      - "run"
      - "--rm"
      - "python-test-runner"
      - "pytest"
      - "tests/integration"

  # Step 5: Build Docker image
  - id: "Dockerize"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/python-app:latest", "."]

  # Step 6: Push Docker image to GCR
  - id: "Push to GCR"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/python-app:latest"]

  # Step 7: Deploy to Cloud Run
  - id: "Deploy to Cloud Run"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "python-app"
      - "--image=gcr.io/$PROJECT_ID/python-app:latest"
      - "--platform=managed"
      - "--region=us-central1"
      - "--allow-unauthenticated"

options:
  logging: CLOUD_LOGGING_ONLY

artifacts:
  objects:
    location: "gs://s224169428/sit707/"
    paths: ["**/*.py"]
